<?php
/**
* Implementation of hook_help().
*/
function passkey_help($path, $arg) {
    switch ( $path ) {
        case 'admin/help#passkey': {
            return( '<p>' . t('Authentication to Drupal with an external system.') . '</p>' );
        }
    }
}

function passkey_menu() {
  $items = array();

  $items['admin/user/passkey_role'] = array(
    'title' => t('Passkey SSO role'),
    'description' => t('Assign users who log in with Passkey to a role.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('passkey_admin_settings'),
    'access arguments' => array('administer users'),
  );

  return $items;
}

/**
   * Implementation of hook_form_alter().
   *
   * Change the normal form login form behaviour.
   */
function passkey_form_user_login_alter(&$form, $form_state) {
    unset($form['links']);
    $form['#validate'] = array('user_login_name_validate', 'passkey_login_validate', 'user_login_final_validate');
}

function passkey_form_user_login_block_alter(&$form, $form_state) {
  return passkey_form_user_login_alter($form, $form_state);
}

/**
* authenticate a user using an Evo account
*/
function passkey_login_validate( $form, &$form_state ) {    
  if (passkey_sso_authenticate($form_state['values']['name'], $form_state['values']['pass'])) {
    user_external_login_register($form_state['values']['name'], '3volut4ionH0ser!' );
    user_authenticate_finalize( $form_state['values']);
  }
  // If external auth fails, do nothing and Drupal see this as a rejection
}

function passkey_user( $op, &$edit, &$account, $category = null ) {
    switch( $op ) {
        case('insert'): {
          if ($rid = variable_get('passkey_roles', '')){
            // get the role in question
        	  $roles = user_roles(TRUE);
        	  // add it to the user
            $edit['roles'][$rid] = $roles[$rid];
          }
        }

        case('update'): {
          // Don't allow users to update their account
          unset($edit);
          drupal_set_message( 'Accounts must be edited in remote system, not here.', 'error' );
        }
    }
}

function passkey_admin_settings() {
  $roles = user_roles(TRUE);
  unset($roles['2']);
  $form['passkey_roles'] = array(
    '#type' => 'radios',
    '#title' => t('Select role to automatically assign to users who log in via Passkey'),
    '#options' => $roles,
    '#default_value' => variable_get('registration_role_roles', ''),
    '#description' => t('The selected role will be assigned to anyone who logs in with a remote account.'),
  );
  return system_settings_form($form);
}
?>