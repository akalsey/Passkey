<?php
/**
* Implementation of hook_help().
*/
function passkey_help($path, $arg) {
    switch ( $path ) {
        case 'admin/help#passkey': {
            return( '<p>' . t('Authentication to Drupal with an external system.') . '</p>' );
        }
    }
}

function passkey_menu() {
  $items = array();

  $items['admin/config/people/passkey_role'] = array(
    'title' => t('Passkey'),
    'description' => t('Choose which module will handle Passkey authorization and assign users who log in with Passkey to a role.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('passkey_admin_settings'),
    'access arguments' => array('administer users'),
  );

  return $items;
}

/**
   * Implementation of hook_form_alter().
   *
   * Change the normal form login form behaviour.
   */
function passkey_form_user_login_alter(&$form, $form_state) {
    $form['#validate'] = array('user_login_name_validate', 'passkey_login_validate', 'user_login_final_validate');
}

/**
* authenticate a user using an external account
*/
function passkey_login_validate( $form, &$form_state ) {
  $user = $form_state['values']['name'];
  $pass = $form_state['values']['pass'];
  $function = variable_get('passkey_hook', '') .'_passkey_auth';
  if ($function($user, $pass)) {
    watchdog('passkey', "$user logged in with Passkey");
    user_external_login_register($user, 'passkey' );
    $account = user_external_load($user);
    $form_state['uid'] = $account->uid;
    passkey_add_role($account->uid);
  }
  // If external auth fails, do nothing and Drupal sees this as a rejection
}

function passkey_add_role($uid)  {
  $rid = variable_get('passkey_roles', '');
  // check to see if the user already has this role assigned to them
  $results = db_select('users_roles', 'r')
    ->fields('r', array('rid'))
    ->condition('r.uid', $uid)
    ->condition('r.rid', $rid)
    ->execute();
  // if not, add the role
  if ($results->rowCount() == 0)  {
    $insert = db_insert('users_roles')
      ->fields(array(
        'uid' => $uid,
        'rid' => $rid,
      ))
      ->execute();
  }
}

function passkey_user( $op, &$edit, &$account, $category = null ) {
    switch( $op ) {

        case('update'): {
          // Don't allow users to update their account
          unset($edit);
          drupal_set_message( 'Accounts must be edited in remote system, not here.', 'error' );
        }
    }
}

function passkey_admin_settings() {
  $modules = module_implements('passkey_auth');
  foreach ($modules as $name) {
    $options[$name] = $name;
  }
  $form['passkey_hook'] = array(
    '#type' => 'select',
    '#title' => t('Which module would you like to handle auth for you?'),
    '#options' => $options,
    '#default_value' => variable_get('passkey_hook', ''),
  );
  $roles = user_roles(TRUE);
  unset($roles['2']);
  $form['passkey_roles'] = array(
    '#type' => 'radios',
    '#title' => t('Select role to automatically assign to users who log in via Passkey'),
    '#options' => $roles,
    '#default_value' => variable_get('passkey_roles', ''),
    '#description' => t('The selected role will be assigned to anyone who logs in with a remote account.'),
  );
  return system_settings_form($form);
}
?>